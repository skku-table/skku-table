version: "3.8"

services:
  nextjs:
    build:
      context: frontend/
      dockerfile: Dockerfile
    container_name: nextjs-app
    environment:
      - NODE_ENV=production
      - PORT=3000
    ports:
      - "3000:3000"
    networks:
      - web

  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - web

  database:
    container_name: mysql
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - skku-table-database:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - web

  spring-boot-app:
    pull_policy: always
    container_name: spring-boot-app
    image: ghcr.io/skku-table/skku-table-backend:latest
    #    build:
    #      context: backend/
    #      dockerfile: Dockerfile
    #      args:
    #        JAR_FILE: build/libs/skku-table-backend.jar
    ports:
      - 8080:8080 # Spring Boot 애플리케이션을 8080 포트로 매핑
    depends_on:
      - database # 데이터베이스가 먼저 시작되도록 의존성 설정
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    networks:
      - web

volumes:
  caddy_data:
  caddy_config:
  skku-table-database:

networks:
  web:
    driver: bridge
